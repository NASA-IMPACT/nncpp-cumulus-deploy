#!/usr/bin/env bash

set -euo pipefail

function err() {
  echo "${1}" 1>&2
}

# Move the test fixture file up to the parent directory and remove this
# cookiecutter-generated directory.

json_filename="{{ cookiecutter.producerGranuleId }}.json"
yml_filename="{{ cookiecutter.producerGranuleId }}.yml"
mv -n "./${json_filename}" ..
mv -n "./${yml_filename}" ..
rm -rf "$(pwd -P)"

echo "--------------------------------------------------------------------------"
echo " NOTE"
echo "--------------------------------------------------------------------------"
echo " Created a new granule metadata test fixture files:"
echo ""
echo "     cumulus-tf/lambdas/cmr/test/fixtures/metadata/${json_filename}"
echo "     cumulus-tf/lambdas/cmr/test/fixtures/metadata/${yml_filename}"
echo ""
echo " You must populate them with the expected metadata for the granule that"
echo " has either a granuleUR or producerGranuleId value of:"
echo ""
echo "     {{ cookiecutter.producerGranuleId }}"
echo ""
echo " Each test fixture file represents the metadata you expect to be created"
echo " for a specific granule during the Cumulus 'Ingest and Publish' worflow."
echo ""
echo " Each fixture file is automatically used by the unit testing scaffolding"
echo " to generate a unit test to compare the fixture file to the actual"
echo " metadata generated by the 'generate granule metadata' Lambda function."
echo "--------------------------------------------------------------------------"

collection_filename="{{ cookiecutter.collectionName }}___{{ cookiecutter.collectionVersion }}.json"
collection_filepath="${ROOT_DIR}/data/collections/${collection_filename}"

if [[ ! -f "${collection_filepath}" ]]; then
  err ""
  err "--------------------------------------------------------------------------"
  err " WARNING"
  err "--------------------------------------------------------------------------"
  err " There is no corresponding collection file.  Run the following command"
  err " to generate one:"
  err ""
  err "     yarn new:collection \\"
  err "       collectionName={{ cookiecutter.collectionName }} \\"
  err "       collectionVersion={{ cookiecutter.collectionVersion }}"
  err ""
  err "--------------------------------------------------------------------------"
fi
